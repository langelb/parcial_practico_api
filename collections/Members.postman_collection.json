{
	"info": {
		"_postman_id": "3654d4fb-6c04-4965-8909-6fe328f68c02",
		"name": "Members",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30508478"
	},
	"item": [
		{
			"name": "Add a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"member_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john_doe\",\r\n  \"email\": \"john.doe@example.com\",\r\n  \"birthdate\": \"1990-05-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/members",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add a member",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"john_doe\",\r\n  \"email\": \"john.doe@example.com\",\r\n  \"birthdate\": \"1990-05-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"username\": \"john_doe\",\n    \"email\": \"john.doe@example.com\",\n    \"birthdate\": \"1990-05-20\",\n    \"id\": \"565f7000-6dfc-427f-a922-d13bc7da84b6\"\n}"
				}
			]
		},
		{
			"name": "Add an invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/members",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add a member",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": [\n        \"username should not be empty\",\n        \"username must be a string\",\n        \"email must be an email\",\n        \"birthdate must be a valid ISO 8601 date string\"\n    ],\n    \"error\": \"Bad Request\",\n    \"statusCode\": 400\n}"
				}
			]
		},
		{
			"name": "Get all members",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/members",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Get all members",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{member_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": \"7afb6395-e24c-4c17-b244-4f54074d5d60\",\r\n        \"username\": \"john_doe\",\r\n        \"email\": \"john.doe@example.com\",\r\n        \"birthdate\": \"1990-05-20T00:00:00.000Z\",\r\n        \"clubs\": []\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get one member",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/members/{{member_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one member",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{member_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"b94cfa8d-32e0-478e-8011-b826ba658481\",\r\n    \"username\": \"john_doe\",\r\n    \"email\": \"john.doe@example.com\",\r\n    \"birthdate\": \"1990-05-20T00:00:00.000Z\",\r\n    \"clubs\": []\r\n}"
				}
			]
		},
		{
			"name": "Get an invalild member",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid member",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The member with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Update a member",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john_updated\",\r\n  \"email\": \"john.updated@example.com\",\r\n  \"birthdate\": \"1988-12-25\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/members/{{member_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a member",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"john_updated\",\r\n  \"email\": \"john.updated@example.com\",\r\n  \"birthdate\": \"1988-12-25\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{member_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"991a4238-3721-4694-a3ac-22b77c4a27bb\",\n    \"username\": \"john_updated\",\n    \"email\": \"john.updated@example.com\",\n    \"birthdate\": \"1988-12-25\"\n}"
				}
			]
		},
		{
			"name": "Update invalid member",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john_updated\",\r\n  \"email\": \"john.updated@example.com\",\r\n  \"birthdate\": \"1988-12-25\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid member",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"john_updated\",\r\n  \"email\": \"john.updated@example.com\",\r\n  \"birthdate\": \"1988-12-25\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The member with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a member",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/members/{{member_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a member",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{member_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an invalid member",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid member",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The member with the given id was not found\"\r\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}